# =============================================================================
# Org Archivist - Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env to version control!
# =============================================================================

# -----------------------------------------------------------------------------
# API Keys
# -----------------------------------------------------------------------------

# Anthropic API Key for Claude (required)
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# OpenAI API Key (optional - only if using OpenAI embeddings)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Voyage AI API Key (optional - only if using Voyage embeddings)
# Get your API key from: https://www.voyageai.com/
VOYAGE_API_KEY=pa-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# -----------------------------------------------------------------------------
# Embedding Model Configuration
# -----------------------------------------------------------------------------

# Choose embedding provider: openai | voyage
# - openai: OpenAI's text-embedding models (recommended, requires OPENAI_API_KEY)
# - voyage: Voyage AI embeddings (alternative, requires VOYAGE_API_KEY)
#
# RECOMMENDATION: Use OpenAI for best quality and cost efficiency.
# Cost: ~$0.02 per 1M tokens (~$1/month for typical nonprofit usage)
EMBEDDING_PROVIDER=openai

# Specific embedding model name
# OpenAI options (recommended):
#   - text-embedding-3-small (1536 dim) - Best value, $0.00002 per 1K tokens
#   - text-embedding-3-large (3072 dim) - Higher quality, $0.00013 per 1K tokens
#
# Voyage options (alternative):
#   - voyage-large-2 (1536 dim) - General purpose, $0.00012 per 1K tokens
#   - voyage-code-2 (1536 dim) - Optimized for code, $0.00012 per 1K tokens
EMBEDDING_MODEL=text-embedding-3-small

# Vector dimensions (must match the selected embedding model)
# - text-embedding-3-small: 1536
# - text-embedding-3-large: 3072
# - voyage-large-2: 1536
# - voyage-code-2: 1536
EMBEDDING_DIMENSIONS=1536

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------

# PostgreSQL Connection
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://user:password@postgres:5432/org_archivist

# PostgreSQL Individual Settings (alternative to DATABASE_URL)
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_DB=org_archivist
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# -----------------------------------------------------------------------------
# Qdrant Vector Database Configuration
# -----------------------------------------------------------------------------

# Qdrant connection settings
QDRANT_HOST=qdrant
QDRANT_PORT=6333
QDRANT_GRPC_PORT=6334

# Qdrant collection name for document embeddings
QDRANT_COLLECTION_NAME=foundation_docs

# Qdrant API key (optional, only needed for Qdrant Cloud)
# QDRANT_API_KEY=

# -----------------------------------------------------------------------------
# Application Configuration
# -----------------------------------------------------------------------------

# Environment: development | production | testing
ENVIRONMENT=development

# Application host and ports
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000
FRONTEND_HOST=0.0.0.0
FRONTEND_PORT=8501

# Backend URL (for frontend to connect to backend)
BACKEND_URL=http://backend:8000

# Enable debug mode (shows detailed error messages)
DEBUG=true

# Log level: DEBUG | INFO | WARNING | ERROR | CRITICAL
LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# Claude Model Configuration
# -----------------------------------------------------------------------------

# Default Claude model to use
# Options: claude-sonnet-4-5-20250929 | claude-opus-4-20250514
CLAUDE_MODEL=claude-sonnet-4-5-20250929

# Generation parameters
CLAUDE_TEMPERATURE=0.3
CLAUDE_MAX_TOKENS=4096

# API timeout and retry settings
CLAUDE_TIMEOUT_SECONDS=60
CLAUDE_MAX_RETRIES=3
CLAUDE_RETRY_DELAY_SECONDS=2

# -----------------------------------------------------------------------------
# RAG Configuration
# -----------------------------------------------------------------------------

# Document chunking settings
CHUNK_SIZE=500
CHUNK_OVERLAP=50
MIN_CHUNK_SIZE=100
MAX_CHUNK_SIZE=1000

# Retrieval settings
DEFAULT_TOP_K=5
MAX_TOP_K=20
MIN_SIMILARITY_THRESHOLD=0.7
DEFAULT_RECENCY_WEIGHT=0.7

# Hybrid search weights
VECTOR_SEARCH_WEIGHT=0.7
KEYWORD_SEARCH_WEIGHT=0.3

# Context window management
MAX_CONTEXT_TOKENS=8000
CONTEXT_BUFFER_TOKENS=1000

# -----------------------------------------------------------------------------
# Reranking Configuration (Optional Enhancement)
# -----------------------------------------------------------------------------

# Enable reranking with cross-encoder models (requires optional dependency)
# Install with: pip install llama-index-postprocessor-sentence-transformer
ENABLE_RERANKING=false

# Reranker model selection (speed/accuracy tradeoff)
# Options:
#   - cross-encoder/ms-marco-TinyBERT-L-2-v2 (fastest, lowest accuracy)
#   - cross-encoder/ms-marco-MiniLM-L-2-v2 (balanced, recommended)
#   - cross-encoder/ms-marco-MiniLM-L-6-v2 (balanced)
#   - cross-encoder/ms-marco-MiniLM-L-12-v2 (slower, highest accuracy)
#   - jinaai/jina-reranker-v2-base-multilingual (multilingual)
RERANKER_MODEL=cross-encoder/ms-marco-MiniLM-L-2-v2

# Number of results after reranking (None = keep all)
# Leave empty or comment out to keep all results
# RERANKER_TOP_N=10

# -----------------------------------------------------------------------------
# File Upload Configuration
# -----------------------------------------------------------------------------

# Maximum file size in MB
MAX_FILE_SIZE_MB=50

# Maximum number of files in batch upload
MAX_BATCH_UPLOAD=20

# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=pdf,docx,txt,doc

# Upload directory (relative to project root)
UPLOAD_DIR=./data/uploads

# Document storage directory
DOCUMENTS_DIR=./data/documents

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------

# Secret key for session management (generate a random string)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=change-me-to-a-random-secret-key

# CORS origins (comma-separated)
# For development: http://localhost:8501,http://localhost:8000
# For production: https://yourdomain.com
CORS_ORIGINS=http://localhost:8501,http://localhost:8000

# Enable authentication (true | false)
ENABLE_AUTH=false

# Session timeout in minutes
SESSION_TIMEOUT_MINUTES=60

# -----------------------------------------------------------------------------
# Cache Configuration
# -----------------------------------------------------------------------------

# Enable caching (true | false)
ENABLE_CACHE=true

# Cache TTL in seconds
QUERY_CACHE_TTL=3600
EMBEDDING_CACHE_TTL=86400
RESPONSE_CACHE_TTL=1800

# Cache size (max number of entries)
CACHE_MAX_SIZE=1000

# -----------------------------------------------------------------------------
# Monitoring & Logging
# -----------------------------------------------------------------------------

# Enable detailed request logging
ENABLE_REQUEST_LOGGING=true

# Log file location
LOG_FILE=./logs/app.log

# Enable performance metrics collection
ENABLE_METRICS=true

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------

# Enable streaming responses
ENABLE_STREAMING=true

# Enable quality validation
ENABLE_QUALITY_VALIDATION=true

# Enable hallucination detection
ENABLE_HALLUCINATION_DETECTION=true

# Enable auto-save for conversations
ENABLE_AUTO_SAVE=true

# Auto-save interval in seconds
AUTO_SAVE_INTERVAL=30

# -----------------------------------------------------------------------------
# Database Migrations
# -----------------------------------------------------------------------------

# Disable automatic database migrations on startup (true | false)
# Set to true if you want to run migrations manually
DISABLE_AUTO_MIGRATIONS=false

# Migration timeout in seconds
MIGRATION_TIMEOUT_SECONDS=60

# Number of retry attempts for migrations
MIGRATION_RETRY_ATTEMPTS=3

# Delay between migration retry attempts in seconds
MIGRATION_RETRY_DELAY_SECONDS=5

# -----------------------------------------------------------------------------
# Development & Testing
# -----------------------------------------------------------------------------

# Enable hot reload for backend
ENABLE_HOT_RELOAD=true

# Enable API documentation at /docs
ENABLE_API_DOCS=true

# Test database URL (for running tests)
TEST_DATABASE_URL=postgresql://user:password@postgres:5432/org_archivist_test

# Enable mock mode (uses dummy data instead of real APIs)
MOCK_MODE=false
